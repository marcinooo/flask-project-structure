version: '3'
services:

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ../scripts/default.conf:/etc/nginx/conf.d/default.conf
    restart: always
    ports:
      - 80:80
      - 443:443
    networks:
      - flasker
    depends_on:
      flask:
        condition: service_started

  flask:
    image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/flasker
    container_name: flask
    command: >
      bash -c "python manage.py create_db
      && python manage.py create_user admin admin@fake-mail.com Abcd1234
      && gunicorn --bind 0.0.0.0:5000 --workers 4 'webapp:create_app()'"
    environment:
      - PYTHONUNBUFFERED=1
      - FLASK_ENV=development
      - FLASK_APP=webapp:create_app()
    volumes:
      - ../:/var/wwww
    networks:
      - flasker
    depends_on:
      worker:
        condition: service_started

  worker:
    image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/flasker
    environment:
      - FLASK_ENV=development
    container_name: worker
    command: celery -A webapp.celery worker -B -l info
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    stop_grace_period: "${DOCKER_STOP_GRACE_PERIOD:-3s}"
    networks:
      - flasker
    volumes:
      - ../:/var/wwww

volumes:
  postgres_data:
  redis:

networks:
  flasker:
