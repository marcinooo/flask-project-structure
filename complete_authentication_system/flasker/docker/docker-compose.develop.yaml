version: '3.9'
services:

  flask:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile.develop
    container_name: flask
    command: >
      bash -c "./scripts/wait_for_postgres.sh
      && python manage.py create_db
      && python manage.py create_user admin admin@fake-mail.com Abcd1234
      && flask run --host=0.0.0.0"
    ports:
      - 5000:5000
    environment:
      - PYTHONUNBUFFERED=1
      - FLASK_ENV=development
      - FLASK_APP=webapp:create_app()
    volumes:
      - ../:/var/wwww
    networks:
      - flasker
    depends_on:
      - postgres
      - redis
      - worker

  postgres:
    image: postgres:13-alpine
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=flasker
      - POSTGRES_PASSWORD=flasker
      - POSTGRES_DB=flasker
    networks:
      - flasker
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  redis:
    image: "redis:alpine"
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - flasker
    volumes:
      - "redis:/data"

  worker:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile.develop
    environment:
      - FLASK_ENV=development
    command: celery -A webapp.celery worker -B -l info
    depends_on:
      - "redis"
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    stop_grace_period: "${DOCKER_STOP_GRACE_PERIOD:-3s}"
    networks:
      - flasker
    volumes:
      - ../:/var/wwww

volumes:
  postgres_data:
  redis:

networks:
  flasker:
